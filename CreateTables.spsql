--#psql -h localhost -p 5432 -U admin -d hawkmark
--connecting to the database

--Stocks
--shows the current price of stocks and the total amount of available stocks
--maybe add some more information to table/remove the sold stocks may be unneeded
Create table stocks (
    stock_ID int Primary key,
    price int not null,
    total_stocks int not null,
    stock_name VARCHAR (50) not null,
    sold_stocks int not null);
    --users
    --should be added to everytime someone makes an account 
    --with the username and password saved to the table
Create table users (
    user_ID int Primary key,
    username VARCHAR (50) unique not null,
    passwords VARCHAR (50) NOT NULL,
    created_on Timestamp not null,
    last_login timestamp not null);
    --Roles
    --maybe unneeded
Create table roles (
    role_ID int PRIMARY KEY,
    roleName VARCHAR (255) UNIQUE NOT NULL
);
--Leaderboard
--shows how much money a person has/made in the stock market
CREATE Table leaderboard (
    leaderboard_ID int PRIMARY key,
    user_ID integer,
--make so it shows the username not ID
    ranks int UNIQUE not NULL,
    earnings int not null,
    constraint lead_user_id_fkey FOREIGN key (user_ID)
    REFERENCES users (user_ID)

);
-- inventory
--shows number of stocks bought and how much user has in the bank
CREATE table inventory (
    inventory_ID INTEGER NOT NULL, 
    user_ID integer,
    bank_Total INTEGER not null,
    in_Stocks INTEGER not null,
    PRIMARY key (inventory_ID),
    constraint fk_users
    Foreign key(user_ID)
    REFERENCES users(user_ID)
);
-- connects inventory with stocks
create table invStocks (
    inventory_ID int,
    user_ID int,
    Constraint InvStocks_inventory_fkey FOREIGN key (inventory_ID)
    REFERENCES inventory (inventory_ID),
    Constraint InvStocks_user_ID_fkey FOREIGN key (user_id)
    REFERENCES users(user_ID)
);

-- Users roles maybe unimportant
CREATE Table user_roles (
    user_ID INT,
    role_ID INT,
    PRIMARY KEY (user_ID, role_ID),
    constraint userRoles_role_id_fkey FOREIGN KEY (role_ID)
    REFERENCES roles (role_ID),
    constraint userRoles_user_id_fkey FOREIGN KEY (user_ID)
    REFERENCES users (users_ID)
);
-- Trade history
-- shows what the user has bought in the past
CREATE TABLE trade_history (
	trade_ID SERIAL PRIMARY KEY,
    user_ID INTEGER,
	ticker TEXT,
	trade_type TEXT, 
    trade_n INTEGER,
    price NUMERIC(1000,2),
    date TIMESTAMP,
    constraint trade_history_user_ID_fkey Foreign key (user_ID)
    References users (user_ID)
);
